<?php

namespace App\Entities;
use Laravel\Passport\HasApiTokens;
use Illuminate\Notifications\Notifiable;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Vinelab\NeoEloquent\Eloquent\Model as NeoEloquent;
use Vinelab\NeoEloquent\Eloquent\SoftDeletes as SoftDeletes;

class Post extends NeoEloquent
{
    use SoftDeletes;
    use HasApiTokens,Notifiable;
    protected $label = 'Post';


    protected $dates = ['deleted_at'];
    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'title','price'
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    public function routeNotificationForSlack() {
        return env('SLACK_WEBHOOK_URL');
    }

    public function belongToUser(){
        return $this->belongsTo('User');
    }

    public function hasUser(){
        return $this->hasOne('User');
    }

    public function belongsToAuthor(){
        return $this->belongsTo('Author');
    }

    public function create (array $attributes = [])
    {
        $attributes['id'] = rand(100000000,999999999).time();
        $attributes['created_at'] = time();
        $attributes['updated_at'] = time();
        return parent::create($attributes); // TODO: Change the autogenerated stub
    }

    public function update (array $attributes = [], array $options = [])
    {
        $attributes['updated_at'] = time();
        return parent::update($attributes, $options); // TODO: Change the autogenerated stub
    }
}
